// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: NvBlastExtTkSerialization-capn

#include "NvBlastExtTkSerialization-capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<54> b_ffd67c4b7067dde6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    230, 221, 103, 112,  75, 124, 214, 255,
     31,   0,   0,   0,   1,   0,   0,   0,
     88, 238, 117, 242, 152,  68, 254, 175,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     78, 118,  66, 108,  97, 115, 116,  69,
    120, 116,  84, 107,  83, 101, 114, 105,
     97, 108, 105, 122,  97, 116, 105, 111,
    110,  45,  99,  97, 112, 110,  58,  84,
    107,  65, 115, 115, 101, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
     97, 115, 115, 101, 116,  76,  76,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    125,  66, 111, 195, 104, 132,  79, 206,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106, 111, 105, 110, 116,  68, 101, 115,
     99, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    151, 168, 136,   4, 129, 173, 219, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ffd67c4b7067dde6 = b_ffd67c4b7067dde6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ffd67c4b7067dde6[] = {
  &s_b7dbad810488a897,
  &s_ce4f8468c36f427d,
};
static const uint16_t m_ffd67c4b7067dde6[] = {0, 1};
static const uint16_t i_ffd67c4b7067dde6[] = {0, 1};
const ::capnp::_::RawSchema s_ffd67c4b7067dde6 = {
  0xffd67c4b7067dde6, b_ffd67c4b7067dde6.words, 54, d_ffd67c4b7067dde6, m_ffd67c4b7067dde6,
  2, 2, i_ffd67c4b7067dde6, nullptr, nullptr, { &s_ffd67c4b7067dde6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<60> b_b7dbad810488a897 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    151, 168, 136,   4, 129, 173, 219, 183,
     31,   0,   0,   0,   1,   0,   0,   0,
     88, 238, 117, 242, 152,  68, 254, 175,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     78, 118,  66, 108,  97, 115, 116,  69,
    120, 116,  84, 107,  83, 101, 114, 105,
     97, 108, 105, 122,  97, 116, 105, 111,
    110,  45,  99,  97, 112, 110,  58,  84,
    107,  65, 115, 115, 101, 116,  74, 111,
    105, 110, 116,  68, 101, 115,  99,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 100, 101,  73, 110, 100, 105,
     99, 101, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 116, 116,  97,  99, 104,  80, 111,
    115, 105, 116, 105, 111, 110, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0, 142, 205, 250, 147, 125, 129, 237,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b7dbad810488a897 = b_b7dbad810488a897.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b7dbad810488a897[] = {
  &s_ed817d93facd8e00,
};
static const uint16_t m_b7dbad810488a897[] = {1, 0};
static const uint16_t i_b7dbad810488a897[] = {0, 1};
const ::capnp::_::RawSchema s_b7dbad810488a897 = {
  0xb7dbad810488a897, b_b7dbad810488a897.words, 60, d_b7dbad810488a897, m_b7dbad810488a897,
  1, 2, i_b7dbad810488a897, nullptr, nullptr, { &s_b7dbad810488a897, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_ed817d93facd8e00 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      0, 142, 205, 250, 147, 125, 129, 237,
     31,   0,   0,   0,   1,   0,   2,   0,
     88, 238, 117, 242, 152,  68, 254, 175,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     78, 118,  66, 108,  97, 115, 116,  69,
    120, 116,  84, 107,  83, 101, 114, 105,
     97, 108, 105, 122,  97, 116, 105, 111,
    110,  45,  99,  97, 112, 110,  58,  80,
    120,  86, 101,  99,  51,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    120,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    122,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ed817d93facd8e00 = b_ed817d93facd8e00.words;
#if !CAPNP_LITE
static const uint16_t m_ed817d93facd8e00[] = {0, 1, 2};
static const uint16_t i_ed817d93facd8e00[] = {0, 1, 2};
const ::capnp::_::RawSchema s_ed817d93facd8e00 = {
  0xed817d93facd8e00, b_ed817d93facd8e00.words, 64, nullptr, m_ed817d93facd8e00,
  0, 3, i_ed817d93facd8e00, nullptr, nullptr, { &s_ed817d93facd8e00, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace Nv {
namespace Blast {
namespace Serialization {

// TkAsset
constexpr uint16_t TkAsset::_capnpPrivate::dataWordSize;
constexpr uint16_t TkAsset::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TkAsset::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TkAsset::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TkAssetJointDesc
constexpr uint16_t TkAssetJointDesc::_capnpPrivate::dataWordSize;
constexpr uint16_t TkAssetJointDesc::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TkAssetJointDesc::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TkAssetJointDesc::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// PxVec3
constexpr uint16_t PxVec3::_capnpPrivate::dataWordSize;
constexpr uint16_t PxVec3::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PxVec3::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PxVec3::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

